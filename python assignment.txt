import json
from datetime import datetime


class StatementInfo(object):
    customerName = None  # str
    accountNumber = None  # str
    currency = None  # str
    periodStart = None  # datetime object
    periodEnd = None  # datetime object
    openingBalance = None  # float
    closingBalance = None  # float
    totalDebit = None  # float
    totalCredit = None  # float
    transactions = list()


class Transaction(object):
    transactionDate = None  # datetime object
    amount = None  # float
    balance = None  # float
    type = None  # str
    narration = None  # str

    def haveData(self):
        if self.__dict__.keys():
            return True
        else:
            return False


# Load the JSON data
json_data = '''
{
    "customerName": "John Doe",
    "accountNumber": "123456789",
    "currency": "USD",
    "periodStart": "2022-08-01",
    "periodEnd": "2022-08-31",
    "openingBalance": 2000000.0,
    "closingBalance": 1959716.0,
    "totalDebit": 280000.0,
    "totalCredit": 0.0,
    "transactions": [
        {
            "transactionDate": "2022-08-27T00:00:00",
            "narration": "JD-TRANSFER TO ACCOUNT I- COMMISSION MINERALS GUY 3020511778-0",
            "amount": 280000.0,
            "balance": 1959716.0,
            "type": "debit"
        },
        {
            "transactionDate": " ",
            "narration": " ",
            "amount": 0.0,
            "balance": 0.0,
            "type": " "
        },
        {
            "transactionDate": " ",
            "narration": " ",
            "amount": 0.0,
            "balance": 0.0,
            "type": " "
        }
    ]
}
'''

data = json.loads(json_data)

# Extract customer information
statement_info = StatementInfo()
statement_info.customerName = data["customerName"]
statement_info.accountNumber = data["accountNumber"]
statement_info.currency = data["currency"]
statement_info.periodStart = datetime.strptime(data["periodStart"], "%Y-%m-%d").isoformat()
statement_info.periodEnd = datetime.strptime(data["periodEnd"], "%Y-%m-%d").isoformat()
statement_info.openingBalance = data["openingBalance"]
statement_info.closingBalance = data["closingBalance"]
statement_info.totalDebit = data["totalDebit"]
statement_info.totalCredit = data["totalCredit"]

# Extract transaction information
for transaction_data in data["transactions"]:
    transaction = Transaction()
    if transaction_data["transactionDate"].strip() != "":
        transaction.transactionDate = datetime.strptime(transaction_data["transactionDate"], "%Y-%m-%dT%H:%M:%S").isoformat()
    transaction.narration = transaction_data["narration"].strip()
    transaction.amount = transaction_data["amount"]
    transaction.balance = transaction_data["balance"]
    transaction.type = transaction_data["type"].strip()
    if transaction.haveData():
        statement_info.transactions.append(transaction)

# Create the final output dictionary
output_data = {
    "customerName": statement_info.customerName,
    "accountNumber": statement_info.accountNumber,
    "currency": statement_info.currency,
    "periodStart": statement_info.period




















=====================================
complete the missing part of this code     import json
from datetime import datetime


class StatementInfo(object):
    customerName = None  # str
    accountNumber = None  # str
    currency = None  # str
    periodStart = None  # datetime object
    periodEnd = None  # datetime object
    openingBalance = None  # float
    closingBalance = None  # float
    totalDebit = None  # float
    totalCredit = None  # float
    transactions = list()


class Transaction(object):
    transactionDate = None  # datetime object
    amount = None  # float
    balance = None  # float
    type = None  # str
    narration = None  # str

    def haveData(self):
        if self.__dict__.keys():
            return True
        else:
            return False


# Load the JSON data
json_data = '''
{
    "customerName": "John Doe",
    "accountNumber": "123456789",
    "currency": "USD",
    "periodStart": "2022-08-01",
    "periodEnd": "2022-08-31",
    "openingBalance": 2000000.0,
    "closingBalance": 1959716.0,
    "totalDebit": 280000.0,
    "totalCredit": 0.0,
    "transactions": [
        {
            "transactionDate": "2022-08-27T00:00:00",
            "narration": "JD-TRANSFER TO ACCOUNT I- COMMISSION MINERALS GUY 3020511778-0",
            "amount": 280000.0,
            "balance": 1959716.0,
            "type": "debit"
        },
        {
            "transactionDate": " ",
            "narration": " ",
            "amount": 0.0,
            "balance": 0.0,
            "type": " "
        },
        {
            "transactionDate": " ",
            "narration": " ",
            "amount": 0.0,
            "balance": 0.0,
            "type": " "
        }
    ]
}
'''

data = json.loads(json_data)

# Extract customer information
statement_info = StatementInfo()
statement_info.customerName = data["customerName"]
statement_info.accountNumber = data["accountNumber"]
statement_info.currency = data["currency"]
statement_info.periodStart = datetime.strptime(data["periodStart"], "%Y-%m-%d").isoformat()
statement_info.periodEnd = datetime.strptime(data["periodEnd"], "%Y-%m-%d").isoformat()
statement_info.openingBalance = data["openingBalance"]
statement_info.closingBalance = data["closingBalance"]
statement_info.totalDebit = data["totalDebit"]
statement_info.totalCredit = data["totalCredit"]

# Extract transaction information
for transaction_data in data["transactions"]:
    transaction = Transaction()
    if transaction_data["transactionDate"].strip() != "":
        transaction.transactionDate = datetime.strptime(transaction_data["transactionDate"], "%Y-%m-%dT%H:%M:%S").isoformat()
    transaction.narration = transaction_data["narration"].strip()
    transaction.amount = transaction_data["amount"]
    transaction.balance = transaction_data["balance"]
    transaction.type = transaction_data["type"].strip()
    if transaction.haveData():
        statement_info.transactions.append(transaction)

# Create the final output dictionary
output_data = {
    "customerName": statement_info.customerName,
    "accountNumber": statement_info.accountNumber,
    "currency": statement_info.currency,
    "periodStart": statement_info.periodStart,
    "periodEnd": statement_info.periodEnd,
"openingBalance": statement_info.openingBalance,
"closingBalance": statement_info.closingBalance,
"totalDebit": statement_info.totalDebit,
"totalCredit": statement_info.totalCredit,
"transactions": []
}

for transaction in statement_info.transactions:
transaction_data = {
"transactionDate": transaction.transactionDate,
"narration": transaction.narration,
"amount": transaction.amount,
"balance": transaction.balance,
"type": transaction.type
}
output_data["transactions"].append(transaction_data)

output_json = json.dumps(output_data, indent=4)
print(output_json)


